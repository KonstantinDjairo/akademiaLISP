** Ἀκαδημία LISP

a very fast web application written in Rust that compiles to WASM

[[img/logo.jpg]]

*** goals :
**** > related to consume less as possible
**** > old school vintage look (90' computers)
**** > chat rooms
**** > post content (only text)
**** > be secure in terms of memory safety and SQL 



*** Build :
  
*** Trunk
 
 	
  
  Precisa ter instaldo o compilador *Rust* 
  Depois de instalado, agora instale os seguintes ferramentas do rustup.

  
#+BEGIN_EXAMPLE
  rustup target add wasm32-unknown-unknown
#+END_EXAMPLE
  
#+BEGIN_EXAMPLE
  cargo install trunk wasm-bindgen-cli
#+END_EXAMPLE


  Depois de tudo instalado nos conformes, execute o comando:
  *Se quiser pode só rodar o comando   trunk serve   , irá funcionar da mesma forma*
  
  trunk build && trunk serve
 
*** Build para Unix

				  
**** wasm-bindgen-cli
  
  #+BEGIN_EXAMPLE
  Primeiro instale o gerador de JavaScript.
  #+END_EXAMPLE

 
  #+BEGIN_EXAMPLE
  cargo install wasm-bindgen-cli
  #+END_EXAMPLE


  Trunk é um construtor de aplicativo web em WASM para 
Rust, é necessária a instalção.
 
  #+BEGIN_EXAMPLE
  cargo install trunk wasm-bindgen-cli
  #+END_EXAMPLE
  
  O comando abaixo irá gerar um arquivo .wasm.

  #+BEGIN_EXAMPLE
  cargo build --target wasm32-unknown-unknown

  #+END_EXAMPLE
   
  Esse comando irá gerar um conjunto de arquivos
contendo o WebAssembly compilado do seu aplicativo e um
wrapper JavaScript que carregará o binário Wasm e o
executará.


  #+BEGIN_EXAMPLE
  wasm-bindgen --target web --out-dir static --out-name wasm target/wasm32-unknown-unknown/debug/LowStream.wasm --no-typescript
  #+END_EXAMPLE
  O comando abaixo vai tornar o servidor ativo, para 
que seu acesso possa ser possibilitado.

  #+BEGIN_EXAMPLE
  trunk serve
  #+END_EXAMPLE
  Sempre que houver alguma modificação, o seu .wasm precisa ser atualizado, então execute:
  
#+BEGIN_EXAMPLE
  cargo build --target wasm32-unknown-unknown && trunk serve

#+END_EXAMPLE
